version: 0.2
phases:
  install:
    runtime-versions:
      nodejs: 14
    commands:
      - echo "Update runner"
      - curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
      - sudo apt update --allow-insecure-repositories -y
      - apt-get -y install jq
      - echo "Installing kubectl"
      - curl -o kubectl https://amazon-eks.s3.us-west-2.amazonaws.com/1.15.10/2020-02-22/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin                
  pre_build:
    commands:
      - echo "Logging into Amazon ECR..."
      - aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 083557380015.dkr.ecr.us-east-1.amazonaws.com
      - TAG="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | head -c 8)"
      - echo "Login AWS EKS"
      - aws eks --region $AWS_DEFAULT_REGION update-kubeconfig --name $AWS_CLUSTER_NAME
  build:
    commands:
      - echo Build started on `date`
      - docker build -t "${REPOSITORY_URI}:latest" .
      - docker tag "${REPOSITORY_URI}:latest" "${REPOSITORY_URI}:${TAG}"
  post_build:
    commands:
      - echo Build completed on `date`
      - echo "Pushing Docker image to ECR"
      - docker push "${REPOSITORY_URI}:latest"
      - docker push "${REPOSITORY_URI}:${TAG}"
      - printf '{"Tag":"%s","RepositoryUri":"%s"}' $TAG $REPOSITORY_URI $PROJECT_NAME $ARTIFACT_BUCKET > build.json
      - echo "Deploy to EKS"
      - kubectl set image -n $NAMESPACE deployment/$DEPLOYMENT $IMAGENAME="${REPOSITORY_URI}:${TAG}"
      - echo Deploy ended on `date`                            
